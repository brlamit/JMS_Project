<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3/n+L9hmNvUwOPipAAAAAElFTkSuQmCC
</value>
  </data>
</root>